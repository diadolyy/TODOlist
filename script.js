document.addEventListener("DOMContentLoaded", function(){
    const burgerMenu=document.getElementById("burgerMenu");
    const navMenu=document.getElementById("navMenu");
    const taskList=document.getElementById("taskList");
    const filterAll=document.getElementById("filterAll");
    const filterActive=document.getElementById("filterActive");
    const filterCompleted=document.getElementById("filterCompleted");
    const searchInput=document.getElementById("searchInput");
    const themeToggle=document.getElementById("themeToggle");
    const body=document.body;

    burgerMenu.addEventListener("click", function(){
        navMenu.classList.toggle("active"); //–¥–æ–±–∞–≤–ª—è–µ–º/—É–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å active, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç –º–µ–Ω—é –≤–∏–¥–∏–º—ã–º
        burgerMenu.textContent = navMenu.classList.contains("active") ? "‚úñ" : "‚ò∞";
        
    })

    //–∑–∞–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∑–∞ –µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞–º–∏
    document.addEventListener("click", function(event){
        if(!navMenu.contains(event.target) && !burgerMenu.contains(event.target)){
            navMenu.classList.remove("active");
        }
    })

    //–∑–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–¥–∞—á–∏ —Å api
    fetch("https://jsonplaceholder.typicode.com/todos?_limit=5")
    .then(response=>response.json())
    .then(data=>{
        data.forEach(task=>{
            const li= document.createElement("li");
            li.innerHTML=`${task.title} <button class="deleteBtn">‚ùå</button>`;
            taskList.appendChild(li);
        });
    })
    .catch(error=>console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", error));
    
    // —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á
    function filterTasks(filterType){
        const tasks=document.querySelectorAll("li");

        tasks.forEach(task => {
            const isCompleted=task.classList.contains("completed");

            if(filterType=="all"){
                task.style.display="flex";
            }else if(filterType=="active" && !isCompleted){
                task.style.display="flex";
            }else if(filterType=="completed" && isCompleted){
                task.style.display="flex";
            }else{
                task.style.display="none";
            }
        });

        // –æ–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        document.querySelectorAll(".filter-btn").forEach(btn=>btn.classList.remove("active"));
        document.getElementById(`filter${filterType.charAt(0).toUpperCase()+filterType.slice(1)}`).classList.add("active");

    }
    filterAll.addEventListener("click", ()=> filterTasks("all"));
    filterActive.addEventListener("click", ()=> filterTasks("active"));
    filterCompleted.addEventListener("click", ()=> filterTasks("completed"));

    // –ø–æ–∏—Å–∫ –∑–∞–¥–∞—á
    searchInput.addEventListener("input", function(){
        const searchText=searchInput.value.toLowerCase();
        const tasks=taskList.querySelectorAll("li");

        tasks.forEach(task=>{
            const taskText=task.textContent.toLowerCase();

            task.style.display=taskText.includes(searchText)?"flex":"none";
        })
    })

    // –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ª–∏ —Ç–µ–º–∞ –≤ localStorage
    if(localStorage.getItem("theme")==="dark"){
        body.classList.add("dark-theme");
        themeToggle.textContent="‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞";
    }

    themeToggle.addEventListener("click", function(){
        body.classList.toggle("dark-theme");

        if(body.classList.contains("dark-theme")){
            localStorage.setItem("theme", "dark");
            themeToggle.textContent="‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞";
        }else{
            localStorage.setItem("theme", "light");
            themeToggle.textContent="üåô –¢–µ–º–Ω–∞—è —Ç–µ–º–∞";
        }
    })

})

//—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–∞–º—è—Ç–∏
function saveTasks(){
    let tasks=[];
    document.querySelectorAll("#taskList li").forEach(li=>{
        tasks.push(li.firstChild.textContent.trim());
    });
    localStorage.setItem("tasks", JSON.stringify(tasks));
}

//–∑–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–∞–º—è—Ç–∏ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function loadTasks(){
    let tasks=JSON.parse(localStorage.getItem("tasks")) || [];
    tasks.forEach(taskText=>{
        let li=document.createElement("li");
        
        li.innerHTML=`${taskText} <button class="deleteBtn">‚ùå</button>`;
        document.getElementById("taskList").appendChild(li);
        
    });
}

//–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
document.getElementById("addTask").addEventListener("click", function(){
    let input= document.getElementById("taskInput");
    let taskText= input.value.trim();
    if(!taskText) return alert("–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É!");

    fetch("https://jsonplaceholder.typicode.com/todos", {
        method: "POST",
        body: JSON.stringify({ title: taskText, completed: false }),
        headers: { "Content-Type": "application/json" }
    })
    .then(response => response.json())
    .then(data => {
        const li = document.createElement("li");
        li.innerHTML = `${data.title} <button class="deleteBtn">‚ùå</button>`;
        document.getElementById("taskList").appendChild(li);
        document.getElementById("taskInput").value = ""; // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è
    })
    .catch(error => console.error("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:", error));
    
});

//–¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç
document.getElementById("taskList").addEventListener("click", function(event){
    if(event.target.tagName=="BUTTON"){
        const li=event.target.parentElement;
        const taskID=li.getAttribute("data-id"); //–ø–æ–ª—É—á–∞–µ–º ID –∑–∞–¥–∞—á–∏

        li.classList.add("fade-out");
        setTimeout(() => {
            fetch(`https://jsonplaceholder.typicode.com/todos/${taskID}`, {
                method: "DELETE",
            })
            .then(response => {
                if (response.ok) {
                    li.remove(); // –£–¥–∞–ª—è–µ–º –∏–∑ DOM
                } else {
                    console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è");
                }
            })
            .catch(error => console.error("–û—à–∏–±–∫–∞:", error));        
        }, 300);
        
    
        // event.target.parentElement.remove();
        saveTasks();
    }
    
    //–æ—Ç–º–µ—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á 
    if (event.target.tagName === "LI"){
        event.target.classList.toggle("completed");
        saveTasks();
    }
})

document.getElementById("taskList").addEventListener("dblclick", function(event){
    if(event.target.tagName === "LI"){
        let oldText = event.target.textContent.replace(" ‚ùå", "").trim();
        let input = document.createElement("input");
        input.type="text";
        input.value=oldText;
        event.target.innerHTML="";
        event.target.appendChild(input);
        input.focus();

        input.addEventListener("blur",saveEdit);
        input.addEventListener("keydown", function(e){
            if(e.key ==="Enter") saveEdit();
        });

        function saveEdit(){
            let newText = input.value.trim();
            if(newText !==""){
                event.target.innerHTML = `${newText} <button class="deleteBtn"> ‚ùå</button>`;
                saveTasks();
            }else{
                event.target.remove(); //—É–¥–∞–ª—è–µ—Ç –ø—É—Å—Ç—É—é –∑–∞–¥–∞—á—É
            }
        }
    }
});

window.addEventListener("load", loadTasks);